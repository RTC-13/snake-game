{"ast":null,"code":"/**\n * Class representing a point in a graph.\n */\nexport class Point {\n  /**\n   * Create point coordinates.\n   * @param x - x value of the coordinate.\n   * @param y - y value of the coordinate.\n   */\n  constructor(x, y) {\n    this.xcoord = void 0;\n    this.ycoord = void 0;\n    this.xcoord = x;\n    this.ycoord = y;\n  }\n  /**\n   * Returns the current X value of the coordinate.\n   * @return X coordinate of the point.\n   */\n\n\n  get x() {\n    return this.xcoord;\n  }\n  /**\n   * Returns the current Y value of the coordinate.\n   * @return Y coordinate of the point.\n   */\n\n\n  get y() {\n    return this.ycoord;\n  }\n  /**\n   * returns string representation of the point class.\n   * @example\n   * // Returns x: 0, y: 0\n   * Point.toString()\n   * @returns {string}\n   */\n\n  /**\n   * Returns true if the given point has the same coordinates as this point.\n   * @param p - Point to compare with.\n   * @return True if coordinates are equal, false otherwise.\n   */\n\n\n  equals(p) {\n    return this.xcoord === p.x && this.ycoord === p.y;\n  }\n\n  toString() {\n    return `x: ${this.xcoord}, y: ${this.ycoord}`;\n  }\n\n}","map":{"version":3,"sources":["/Users/roberttineo/Desktop/snake-game/src/Point.ts"],"names":["Point","constructor","x","y","xcoord","ycoord","equals","p","toString"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,MAAMA,KAAN,CAAY;AAIjB;AACF;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,CAAD,EAAYC,CAAZ,EAAuB;AAAA,SAR1BC,MAQ0B;AAAA,SAP1BC,MAO0B;AAChC,SAAKD,MAAL,GAAcF,CAAd;AACA,SAAKG,MAAL,GAAcF,CAAd;AACD;AACD;AACF;AACA;AACA;;;AACc,MAADD,CAAC,GAAG;AACb,WAAO,KAAKE,MAAZ;AACD;AACD;AACF;AACA;AACA;;;AACc,MAADD,CAAC,GAAG;AACb,WAAO,KAAKE,MAAZ;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;;;AACEC,EAAAA,MAAM,CAACC,CAAD,EAAoB;AACxB,WAAO,KAAKH,MAAL,KAAgBG,CAAC,CAACL,CAAlB,IAAuB,KAAKG,MAAL,KAAgBE,CAAC,CAACJ,CAAhD;AACD;;AACDK,EAAAA,QAAQ,GAAW;AACjB,WAAQ,MAAK,KAAKJ,MAAO,QAAO,KAAKC,MAAO,EAA5C;AACD;;AA9CgB","sourcesContent":["/**\n * Class representing a point in a graph.\n */\nexport class Point {\n  private xcoord: number;\n  private ycoord: number;\n\n  /**\n   * Create point coordinates.\n   * @param x - x value of the coordinate.\n   * @param y - y value of the coordinate.\n   */\n  constructor(x: number, y: number) {\n    this.xcoord = x;\n    this.ycoord = y;\n  }\n  /**\n   * Returns the current X value of the coordinate.\n   * @return X coordinate of the point.\n   */\n  public get x() {\n    return this.xcoord;\n  }\n  /**\n   * Returns the current Y value of the coordinate.\n   * @return Y coordinate of the point.\n   */\n  public get y() {\n    return this.ycoord;\n  }\n\n  /**\n   * returns string representation of the point class.\n   * @example\n   * // Returns x: 0, y: 0\n   * Point.toString()\n   * @returns {string}\n   */\n\n  /**\n   * Returns true if the given point has the same coordinates as this point.\n   * @param p - Point to compare with.\n   * @return True if coordinates are equal, false otherwise.\n   */\n  equals(p: Point): boolean {\n    return this.xcoord === p.x && this.ycoord === p.y;\n  }\n  toString(): string {\n    return `x: ${this.xcoord}, y: ${this.ycoord}`;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}