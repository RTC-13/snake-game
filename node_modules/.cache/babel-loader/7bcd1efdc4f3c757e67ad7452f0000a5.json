{"ast":null,"code":"export class CanvasWorldView {\n  constructor(scalingFactor) {\n    this.scalingFactor = void 0;\n    this.worldCanvas = void 0;\n    this.context = void 0;\n    this.scalingFactor = scalingFactor;\n    this.worldCanvas = document.createElement(\"canvas\");\n    this.context = this.worldCanvas.getContext(\"2d\");\n    document.body.appendChild(this.worldCanvas);\n  }\n\n  display(passedWorldModel) {\n    passedWorldModel.allSnakes.forEach(snake => {\n      snake.parts.forEach(part => {\n        const scaledPartX = part.x * this.scalingFactor;\n        const scaledPartY = part.y * this.scalingFactor;\n        this.context.fillStyle = snake.color;\n        this.context.fillRect(scaledPartX, scaledPartY, this.scalingFactor, this.scalingFactor);\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/roberttineo/Desktop/snake-game/src/CanvasWorldView.ts"],"names":["CanvasWorldView","constructor","scalingFactor","worldCanvas","context","document","createElement","getContext","body","appendChild","display","passedWorldModel","allSnakes","forEach","snake","parts","part","scaledPartX","x","scaledPartY","y","fillStyle","color","fillRect"],"mappings":"AAKA,OAAO,MAAMA,eAAN,CAA4C;AAKjDC,EAAAA,WAAW,CAACC,aAAD,EAAwB;AAAA,SAJ3BA,aAI2B;AAAA,SAH3BC,WAG2B;AAAA,SAF3BC,OAE2B;AACjC,SAAKF,aAAL,GAAqBA,aAArB;AACA,SAAKC,WAAL,GAAmBE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB;AACA,SAAKF,OAAL,GAAe,KAAKD,WAAL,CAAiBI,UAAjB,CAA4B,IAA5B,CAAf;AAEAF,IAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0B,KAAKN,WAA/B;AACD;;AAEMO,EAAAA,OAAO,CAACC,gBAAD,EAAqC;AACjDA,IAAAA,gBAAgB,CAACC,SAAjB,CAA2BC,OAA3B,CAAoCC,KAAD,IAAkB;AACnDA,MAAAA,KAAK,CAACC,KAAN,CAAYF,OAAZ,CAAqBG,IAAD,IAAiB;AACnC,cAAMC,WAAW,GAAGD,IAAI,CAACE,CAAL,GAAS,KAAKhB,aAAlC;AACA,cAAMiB,WAAW,GAAGH,IAAI,CAACI,CAAL,GAAS,KAAKlB,aAAlC;AAEA,aAAKE,OAAL,CAAaiB,SAAb,GAAyBP,KAAK,CAACQ,KAA/B;AACA,aAAKlB,OAAL,CAAamB,QAAb,CACEN,WADF,EAEEE,WAFF,EAGE,KAAKjB,aAHP,EAIE,KAAKA,aAJP;AAMD,OAXD;AAYD,KAbD;AAcD;;AA5BgD","sourcesContent":["import { IWorldView } from \"./IWorldView\";\nimport WorldModel from \"./WorldModel\";\nimport { Snake } from \"./Snake\";\nimport { Point } from \"./Point\";\n\nexport class CanvasWorldView implements IWorldView {\n  private scalingFactor: number;\n  private worldCanvas: HTMLCanvasElement;\n  private context: CanvasRenderingContext2D;\n\n  constructor(scalingFactor: number) {\n    this.scalingFactor = scalingFactor;\n    this.worldCanvas = document.createElement(\"canvas\");\n    this.context = this.worldCanvas.getContext(\"2d\")!;\n\n    document.body.appendChild(this.worldCanvas);\n  }\n\n  public display(passedWorldModel: WorldModel): void {\n    passedWorldModel.allSnakes.forEach((snake: Snake) => {\n      snake.parts.forEach((part: Point) => {\n        const scaledPartX = part.x * this.scalingFactor;\n        const scaledPartY = part.y * this.scalingFactor;\n\n        this.context.fillStyle = snake.color;\n        this.context.fillRect(\n          scaledPartX,\n          scaledPartY,\n          this.scalingFactor,\n          this.scalingFactor\n        );\n      });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}