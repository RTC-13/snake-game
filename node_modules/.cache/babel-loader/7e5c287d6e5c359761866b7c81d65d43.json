{"ast":null,"code":"export class LRKeyInputHandler {\n  constructor() {\n    this.wasLeftArrowPushed = void 0;\n    this.wasRightArrowPushed = void 0;\n    this.wasLeftArrowPushed = false;\n    this.wasRightArrowPushed = false;\n    window.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n  }\n\n  handleKeyDown(event) {\n    if (event.key === \"ArrowLeft\") {\n      this.wasLeftArrowPushed = true;\n    } else if (event.key === \"ArrowRight\") {\n      this.wasRightArrowPushed = true;\n    }\n  }\n\n  madeLeftMove() {\n    return this.wasLeftArrowPushed;\n  }\n\n  resetLeftMove() {\n    this.wasLeftArrowPushed = false;\n  }\n\n  madeRightMove() {\n    return this.wasRightArrowPushed;\n  }\n\n  resetRightMove() {\n    this.wasRightArrowPushed = false;\n  }\n\n}","map":{"version":3,"sources":["/Users/roberttineo/Desktop/snake-game/src/LRKeyInputHandler.ts"],"names":["LRKeyInputHandler","constructor","wasLeftArrowPushed","wasRightArrowPushed","window","addEventListener","handleKeyDown","bind","event","key","madeLeftMove","resetLeftMove","madeRightMove","resetRightMove"],"mappings":"AAEA,OAAO,MAAMA,iBAAN,CAAiD;AAItDC,EAAAA,WAAW,GAAG;AAAA,SAHNC,kBAGM;AAAA,SAFNC,mBAEM;AACZ,SAAKD,kBAAL,GAA0B,KAA1B;AACA,SAAKC,mBAAL,GAA2B,KAA3B;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAnC;AACD;;AAEOD,EAAAA,aAAa,CAACE,KAAD,EAA6B;AAChD,QAAIA,KAAK,CAACC,GAAN,KAAc,WAAlB,EAA+B;AAC7B,WAAKP,kBAAL,GAA0B,IAA1B;AACD,KAFD,MAEO,IAAIM,KAAK,CAACC,GAAN,KAAc,YAAlB,EAAgC;AACrC,WAAKN,mBAAL,GAA2B,IAA3B;AACD;AACF;;AAEDO,EAAAA,YAAY,GAAY;AACtB,WAAO,KAAKR,kBAAZ;AACD;;AAEDS,EAAAA,aAAa,GAAS;AACpB,SAAKT,kBAAL,GAA0B,KAA1B;AACD;;AAEDU,EAAAA,aAAa,GAAY;AACvB,WAAO,KAAKT,mBAAZ;AACD;;AAEDU,EAAAA,cAAc,GAAS;AACrB,SAAKV,mBAAL,GAA2B,KAA3B;AACD;;AAhCqD","sourcesContent":["import { IInputHandler } from \"./IInputHandler\";\n\nexport class LRKeyInputHandler implements IInputHandler {\n  private wasLeftArrowPushed: boolean;\n  private wasRightArrowPushed: boolean;\n\n  constructor() {\n    this.wasLeftArrowPushed = false;\n    this.wasRightArrowPushed = false;\n    window.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n  }\n\n  private handleKeyDown(event: KeyboardEvent): void {\n    if (event.key === \"ArrowLeft\") {\n      this.wasLeftArrowPushed = true;\n    } else if (event.key === \"ArrowRight\") {\n      this.wasRightArrowPushed = true;\n    }\n  }\n\n  madeLeftMove(): boolean {\n    return this.wasLeftArrowPushed;\n  }\n\n  resetLeftMove(): void {\n    this.wasLeftArrowPushed = false;\n  }\n\n  madeRightMove(): boolean {\n    return this.wasRightArrowPushed;\n  }\n\n  resetRightMove(): void {\n    this.wasRightArrowPushed = false;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}