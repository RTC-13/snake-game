{"ast":null,"code":"/**\n * Class representing a Canvas World View.\n */\nexport class CanvasWorldView {\n  /**\n   * Create the Canvas World View.\n   * @param {number} scalingFactor scale of the world.\n   */\n  constructor(scalingFactor) {\n    this.scalingFactor = void 0;\n    this.worldCanvas = void 0;\n    this.context = void 0;\n    this.scalingFactor = scalingFactor;\n    this.worldCanvas = document.createElement(\"canvas\");\n    this.context = this.worldCanvas.getContext(\"2d\");\n    document.body.appendChild(this.worldCanvas);\n  }\n  /**\n   * Display the canvas of the world.\n   * @param {WorldModel} passedWorldModel model of the snake game to be used in the canvas.\n   */\n\n\n  display(passedWorldModel) {\n    const snake = passedWorldModel.snake;\n    const scaledSnakeX = snake.position.x * this.scalingFactor;\n    const scaledSnakeY = snake.position.y * this.scalingFactor;\n    this.worldCanvas.width = passedWorldModel.width * this.scalingFactor;\n    this.worldCanvas.height = passedWorldModel.height * this.scalingFactor;\n    this.context.fillStyle = snake.color;\n    this.context.fillRect(scaledSnakeX, scaledSnakeY, this.scalingFactor, this.scalingFactor);\n  }\n\n}","map":{"version":3,"sources":["/Users/roberttineo/Desktop/snake-game/src/CanvasWorldView.ts"],"names":["CanvasWorldView","constructor","scalingFactor","worldCanvas","context","document","createElement","getContext","body","appendChild","display","passedWorldModel","snake","scaledSnakeX","position","x","scaledSnakeY","y","width","height","fillStyle","color","fillRect"],"mappings":"AAGA;AACA;AACA;AACA,OAAO,MAAMA,eAAN,CAA4C;AAKjD;AACF;AACA;AACA;AAEEC,EAAAA,WAAW,CAACC,aAAD,EAAwB;AAAA,SAT3BA,aAS2B;AAAA,SAR3BC,WAQ2B;AAAA,SAP3BC,OAO2B;AACjC,SAAKF,aAAL,GAAqBA,aAArB;AACA,SAAKC,WAAL,GAAmBE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB;AACA,SAAKF,OAAL,GAAe,KAAKD,WAAL,CAAiBI,UAAjB,CAA4B,IAA5B,CAAf;AAEAF,IAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0B,KAAKN,WAA/B;AACD;AACD;AACF;AACA;AACA;;;AAESO,EAAAA,OAAO,CAACC,gBAAD,EAAqC;AACjD,UAAMC,KAAK,GAAGD,gBAAgB,CAACC,KAA/B;AAEA,UAAMC,YAAY,GAAGD,KAAK,CAACE,QAAN,CAAeC,CAAf,GAAmB,KAAKb,aAA7C;AACA,UAAMc,YAAY,GAAGJ,KAAK,CAACE,QAAN,CAAeG,CAAf,GAAmB,KAAKf,aAA7C;AAEA,SAAKC,WAAL,CAAiBe,KAAjB,GAAyBP,gBAAgB,CAACO,KAAjB,GAAyB,KAAKhB,aAAvD;AACA,SAAKC,WAAL,CAAiBgB,MAAjB,GAA0BR,gBAAgB,CAACQ,MAAjB,GAA0B,KAAKjB,aAAzD;AAEA,SAAKE,OAAL,CAAagB,SAAb,GAAyBR,KAAK,CAACS,KAA/B;AACA,SAAKjB,OAAL,CAAakB,QAAb,CACET,YADF,EAEEG,YAFF,EAGE,KAAKd,aAHP,EAIE,KAAKA,aAJP;AAMD;;AAtCgD","sourcesContent":["import { IWorldView } from \"./IWorldView\";\nimport { WorldModel } from \"./WorldModel\";\n\n/**\n * Class representing a Canvas World View.\n */\nexport class CanvasWorldView implements IWorldView {\n  private scalingFactor: number;\n  private worldCanvas: HTMLCanvasElement;\n  private context: CanvasRenderingContext2D;\n\n  /**\n   * Create the Canvas World View.\n   * @param {number} scalingFactor scale of the world.\n   */\n\n  constructor(scalingFactor: number) {\n    this.scalingFactor = scalingFactor;\n    this.worldCanvas = document.createElement(\"canvas\");\n    this.context = this.worldCanvas.getContext(\"2d\")!;\n\n    document.body.appendChild(this.worldCanvas);\n  }\n  /**\n   * Display the canvas of the world.\n   * @param {WorldModel} passedWorldModel model of the snake game to be used in the canvas.\n   */\n\n  public display(passedWorldModel: WorldModel): void {\n    const snake = passedWorldModel.snake;\n\n    const scaledSnakeX = snake.position.x * this.scalingFactor;\n    const scaledSnakeY = snake.position.y * this.scalingFactor;\n\n    this.worldCanvas.width = passedWorldModel.width * this.scalingFactor;\n    this.worldCanvas.height = passedWorldModel.height * this.scalingFactor;\n\n    this.context.fillStyle = snake.color;\n    this.context.fillRect(\n      scaledSnakeX,\n      scaledSnakeY,\n      this.scalingFactor,\n      this.scalingFactor\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}