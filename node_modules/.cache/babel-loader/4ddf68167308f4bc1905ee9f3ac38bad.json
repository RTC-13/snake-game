{"ast":null,"code":"export class GameController {\n  constructor(world) {\n    this.world = void 0;\n    this.player1 = null;\n    this.player2 = null;\n    this.world = world;\n  }\n\n  set player1(player) {\n    this.player1 = player;\n  }\n\n  setPlayer2(player) {\n    this.player2 = player;\n  }\n\n  run() {\n    let lastTime = 0;\n\n    const updateFrame = timestamp => {\n      var _this$player, _this$player2;\n\n      (_this$player = this.player1) === null || _this$player === void 0 ? void 0 : _this$player.makeTurn();\n      (_this$player2 = this.player2) === null || _this$player2 === void 0 ? void 0 : _this$player2.makeTurn();\n      if (!lastTime) lastTime = timestamp;\n      const elapsedTime = timestamp - lastTime;\n\n      if (elapsedTime > 250) {\n        this.world.update(1);\n        lastTime += 100;\n      }\n\n      requestAnimationFrame(updateFrame);\n    };\n\n    requestAnimationFrame(updateFrame);\n  }\n\n}","map":{"version":3,"sources":["/Users/roberttineo/Desktop/snake-game/src/GameController.ts"],"names":["GameController","constructor","world","player1","player2","player","setPlayer2","run","lastTime","updateFrame","timestamp","makeTurn","elapsedTime","update","requestAnimationFrame"],"mappings":"AAGA,OAAO,MAAMA,cAAN,CAAqB;AAK1BC,EAAAA,WAAW,CAACC,KAAD,EAAoB;AAAA,SAJvBA,KAIuB;AAAA,SAHvBC,OAGuB,GAHE,IAGF;AAAA,SAFxBC,OAEwB,GAFC,IAED;AAC7B,SAAKF,KAAL,GAAaA,KAAb;AACD;;AAEiB,MAAPC,OAAO,CAACE,MAAD,EAAuB;AACvC,SAAKF,OAAL,GAAeE,MAAf;AACD;;AAEDC,EAAAA,UAAU,CAACD,MAAD,EAAuB;AAC/B,SAAKD,OAAL,GAAeC,MAAf;AACD;;AAEDE,EAAAA,GAAG,GAAS;AACV,QAAIC,QAAQ,GAAG,CAAf;;AACA,UAAMC,WAAW,GAAIC,SAAD,IAAuB;AAAA;;AACzC,2BAAKP,OAAL,8DAAcQ,QAAd;AACA,4BAAKP,OAAL,gEAAcO,QAAd;AACA,UAAI,CAACH,QAAL,EAAeA,QAAQ,GAAGE,SAAX;AAEf,YAAME,WAAW,GAAGF,SAAS,GAAGF,QAAhC;;AAEA,UAAII,WAAW,GAAG,GAAlB,EAAuB;AACrB,aAAKV,KAAL,CAAWW,MAAX,CAAkB,CAAlB;AACAL,QAAAA,QAAQ,IAAI,GAAZ;AACD;;AAEDM,MAAAA,qBAAqB,CAACL,WAAD,CAArB;AACD,KAbD;;AAeAK,IAAAA,qBAAqB,CAACL,WAAD,CAArB;AACD;;AAnCyB","sourcesContent":["import { WorldModel } from \"./WorldModel\";\nimport { Player } from \"./Player\";\n\nexport class GameController {\n  private world: WorldModel;\n  private player1: Player | null = null;\n  public player2: Player | null = null;\n\n  constructor(world: WorldModel) {\n    this.world = world;\n  }\n\n  public set player1(player: Player): void {\n    this.player1 = player;\n  }\n\n  setPlayer2(player: Player): void {\n    this.player2 = player;\n  }\n\n  run(): void {\n    let lastTime = 0;\n    const updateFrame = (timestamp: number) => {\n      this.player1?.makeTurn();\n      this.player2?.makeTurn();\n      if (!lastTime) lastTime = timestamp;\n\n      const elapsedTime = timestamp - lastTime;\n\n      if (elapsedTime > 250) {\n        this.world.update(1);\n        lastTime += 100;\n      }\n\n      requestAnimationFrame(updateFrame);\n    };\n\n    requestAnimationFrame(updateFrame);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}