{"ast":null,"code":"/**\n * Class representing a Snake Controller.\n */\nexport class SnakeController {\n  /**\n   * @param worldModel - The world model for this controller.\n   * @param snake - The snake of this controller.\n   */\n  constructor(worldModel, snake) {\n    this.snakeWorld = void 0;\n    this.slitherer = void 0;\n    this.snakeWorld = worldModel;\n    this.slitherer = snake;\n  }\n  /**\n   * Turns the snake left.\n   */\n\n\n  turnSnakeLeft() {\n    this.slitherer.turnLeft();\n  }\n  /**\n   * Turns the snake right.\n   */\n\n\n  turnSnakeRight() {\n    this.slitherer.turnRight();\n  }\n  /**\n   * Returns the current position of the Snake.\n   * @return position of the snake.\n   */\n\n\n  get snakePosition() {\n    return this.slitherer.position;\n  }\n  /**\n   * Returns the current direction of the Snake.\n   * @return direction of the snake.\n   */\n\n\n  get snakeDirection() {\n    return this.slitherer.direction;\n  }\n  /**\n   * Returns the width of the snake world.\n   * @return the width of the world.\n   */\n\n\n  get worldWidth() {\n    return this.snakeWorld.width;\n  }\n  /**\n   * Returns the height of the snake world.\n   * @return the height of the world.\n   */\n\n\n  get worldHeight() {\n    return this.snakeWorld.height;\n  }\n\n}","map":{"version":3,"sources":["/Users/roberttineo/Desktop/snake-game/src/SnakeController.ts"],"names":["SnakeController","constructor","worldModel","snake","snakeWorld","slitherer","turnSnakeLeft","turnLeft","turnSnakeRight","turnRight","snakePosition","position","snakeDirection","direction","worldWidth","width","worldHeight","height"],"mappings":"AAIA;AACA;AACA;AACA,OAAO,MAAMA,eAAN,CAAsB;AAI3B;AACF;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,UAAD,EAAyBC,KAAzB,EAAuC;AAAA,SAP1CC,UAO0C;AAAA,SAN1CC,SAM0C;AAChD,SAAKD,UAAL,GAAkBF,UAAlB;AACA,SAAKG,SAAL,GAAiBF,KAAjB;AACD;AAED;AACF;AACA;;;AACSG,EAAAA,aAAa,GAAS;AAC3B,SAAKD,SAAL,CAAeE,QAAf;AACD;AAED;AACF;AACA;;;AACSC,EAAAA,cAAc,GAAS;AAC5B,SAAKH,SAAL,CAAeI,SAAf;AACD;AAED;AACF;AACA;AACA;;;AAC0B,MAAbC,aAAa,GAAU;AAChC,WAAO,KAAKL,SAAL,CAAeM,QAAtB;AACD;AAED;AACF;AACA;AACA;;;AAC2B,MAAdC,cAAc,GAAc;AACrC,WAAO,KAAKP,SAAL,CAAeQ,SAAtB;AACD;AAED;AACF;AACA;AACA;;;AACuB,MAAVC,UAAU,GAAW;AAC9B,WAAO,KAAKV,UAAL,CAAgBW,KAAvB;AACD;AAED;AACF;AACA;AACA;;;AACwB,MAAXC,WAAW,GAAW;AAC/B,WAAO,KAAKZ,UAAL,CAAgBa,MAAvB;AACD;;AAzD0B","sourcesContent":["import { Point } from \"./Point\";\nimport { Direction, Snake } from \"./Snake\";\nimport { WorldModel } from \"./WorldModel\";\n\n/**\n * Class representing a Snake Controller.\n */\nexport class SnakeController {\n  private snakeWorld: WorldModel;\n  private slitherer: Snake;\n\n  /**\n   * @param worldModel - The world model for this controller.\n   * @param snake - The snake of this controller.\n   */\n  constructor(worldModel: WorldModel, snake: Snake) {\n    this.snakeWorld = worldModel;\n    this.slitherer = snake;\n  }\n\n  /**\n   * Turns the snake left.\n   */\n  public turnSnakeLeft(): void {\n    this.slitherer.turnLeft();\n  }\n\n  /**\n   * Turns the snake right.\n   */\n  public turnSnakeRight(): void {\n    this.slitherer.turnRight();\n  }\n\n  /**\n   * Returns the current position of the Snake.\n   * @return position of the snake.\n   */\n  public get snakePosition(): Point {\n    return this.slitherer.position;\n  }\n\n  /**\n   * Returns the current direction of the Snake.\n   * @return direction of the snake.\n   */\n  public get snakeDirection(): Direction {\n    return this.slitherer.direction;\n  }\n\n  /**\n   * Returns the width of the snake world.\n   * @return the width of the world.\n   */\n  public get worldWidth(): number {\n    return this.snakeWorld.width;\n  }\n\n  /**\n   * Returns the height of the snake world.\n   * @return the height of the world.\n   */\n  public get worldHeight(): number {\n    return this.snakeWorld.height;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}