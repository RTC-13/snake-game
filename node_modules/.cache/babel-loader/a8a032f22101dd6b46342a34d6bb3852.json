{"ast":null,"code":"// import display from \"./display\";\n// place your code on line 5 above the export statement below\n\n/**\r\n * Class representing the world model..\r\n */\nclass WorldModel {\n  /**\r\n   * Create a World Model.\r\n   * @param passedSnake\r\n   */\n  constructor(passedSnake, passedWidth, passedHeight) {\n    this.passedSnake = void 0;\n    this.worldWidth = void 0;\n    this.worldHeight = void 0;\n    this.worldView = void 0;\n    this.passedSnake = passedSnake;\n    this.worldWidth = passedWidth;\n    this.worldHeight = passedHeight;\n    this.worldView = null;\n  }\n  /**\r\n   * Updates the position of the snake in the world model by moving it the # of specified steps.\r\n   * @param {number} steps\r\n   */\n\n\n  update(steps) {\n    this.snake.move(steps);\n\n    if (this.worldView !== null) {\n      this.worldView.display(this);\n    }\n  }\n  /**\r\n   * Returns the corresponding snake.\r\n   * @return the current snake.\r\n   */\n\n\n  get snake() {\n    return this.passedSnake;\n  }\n  /**\r\n   * Returns the width of the World Model.\r\n   * @return {number}\r\n   */\n\n\n  get width() {\n    return this.worldWidth;\n  }\n  /**\r\n   * Returns the height of the World Model.\r\n   * @return {number}\r\n   */\n\n\n  get height() {\n    return this.worldHeight;\n  }\n  /**\r\n   * Sets the World View.\r\n   *\r\n   */\n\n\n  set view(worldView) {\n    this.worldView = worldView;\n  }\n\n} // const blueSnake = new Snake(\"blue\");\n// const world = new WorldModel(blueSnake, 100, 100);\n\n\nexport default WorldModel;","map":{"version":3,"sources":["/Users/roberttineo/Desktop/snake-game/src/WorldModel.ts"],"names":["WorldModel","constructor","passedSnake","passedWidth","passedHeight","worldWidth","worldHeight","worldView","update","steps","snake","move","display","width","height","view"],"mappings":"AAAA;AAEA;;AAIA;AACA;AACA;AACA,MAAMA,UAAN,CAAiB;AAMf;AACF;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,WAAD,EAAqBC,WAArB,EAA0CC,YAA1C,EAAgE;AAAA,SATnEF,WASmE;AAAA,SARnEG,UAQmE;AAAA,SAPnEC,WAOmE;AAAA,SANnEC,SAMmE;AACzE,SAAKL,WAAL,GAAmBA,WAAnB;AACA,SAAKG,UAAL,GAAkBF,WAAlB;AACA,SAAKG,WAAL,GAAmBF,YAAnB;AACA,SAAKG,SAAL,GAAiB,IAAjB;AACD;AAED;AACF;AACA;AACA;;;AACSC,EAAAA,MAAM,CAACC,KAAD,EAAgB;AAC3B,SAAKC,KAAL,CAAWC,IAAX,CAAgBF,KAAhB;;AACA,QAAI,KAAKF,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,WAAKA,SAAL,CAAeK,OAAf,CAAuB,IAAvB;AACD;AACF;AACD;AACF;AACA;AACA;;;AACkB,MAALF,KAAK,GAAU;AACxB,WAAO,KAAKR,WAAZ;AACD;AACD;AACF;AACA;AACA;;;AACkB,MAALW,KAAK,GAAW;AACzB,WAAO,KAAKR,UAAZ;AACD;AACD;AACF;AACA;AACA;;;AACmB,MAANS,MAAM,GAAW;AAC1B,WAAO,KAAKR,WAAZ;AACD;AAED;AACF;AACA;AACA;;;AACiB,MAAJS,IAAI,CAACR,SAAD,EAAwB;AACrC,SAAKA,SAAL,GAAiBA,SAAjB;AACD;;AAvDc,C,CA0DjB;AACA;;;AAEA,eAAeP,UAAf","sourcesContent":["// import display from \"./display\";\r\n\r\n// place your code on line 5 above the export statement below\r\nimport IWorldView from \"./IWorldView\";\r\nimport { Snake } from \"./Snake\";\r\nimport display from \"./display\";\r\n/**\r\n * Class representing the world model..\r\n */\r\nclass WorldModel {\r\n  private passedSnake: Snake;\r\n  private worldWidth: number;\r\n  private worldHeight: number;\r\n  private worldView: IWorldView | null;\r\n\r\n  /**\r\n   * Create a World Model.\r\n   * @param passedSnake\r\n   */\r\n  constructor(passedSnake: Snake, passedWidth: number, passedHeight: number) {\r\n    this.passedSnake = passedSnake;\r\n    this.worldWidth = passedWidth;\r\n    this.worldHeight = passedHeight;\r\n    this.worldView = null;\r\n  }\r\n\r\n  /**\r\n   * Updates the position of the snake in the world model by moving it the # of specified steps.\r\n   * @param {number} steps\r\n   */\r\n  public update(steps: number) {\r\n    this.snake.move(steps);\r\n    if (this.worldView !== null) {\r\n      this.worldView.display(this);\r\n    }\r\n  }\r\n  /**\r\n   * Returns the corresponding snake.\r\n   * @return the current snake.\r\n   */\r\n  public get snake(): Snake {\r\n    return this.passedSnake;\r\n  }\r\n  /**\r\n   * Returns the width of the World Model.\r\n   * @return {number}\r\n   */\r\n  public get width(): number {\r\n    return this.worldWidth;\r\n  }\r\n  /**\r\n   * Returns the height of the World Model.\r\n   * @return {number}\r\n   */\r\n  public get height(): number {\r\n    return this.worldHeight;\r\n  }\r\n\r\n  /**\r\n   * Sets the World View.\r\n   *\r\n   */\r\n  public set view(worldView: IWorldView) {\r\n    this.worldView = worldView;\r\n  }\r\n}\r\n\r\n// const blueSnake = new Snake(\"blue\");\r\n// const world = new WorldModel(blueSnake, 100, 100);\r\n\r\nexport default WorldModel;\r\n"]},"metadata":{},"sourceType":"module"}