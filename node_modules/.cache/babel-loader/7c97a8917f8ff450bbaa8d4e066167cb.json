{"ast":null,"code":"/**\n * Class representing a player\n */\nclass Player {\n  /**\n   * Create a player\n   * @param {SnakeController} passedSnakeController snake controller for the player class.\n   */\n  constructor(passedSnakeController) {\n    this.sc = void 0;\n    this.sc = passedSnakeController;\n  }\n  /**\n   * Abastract make turn snake class\n   */\n\n\n}\n\nexport default Player;","map":{"version":3,"sources":["/Users/roberttineo/Desktop/snake-game/src/Player.ts"],"names":["Player","constructor","passedSnakeController","sc"],"mappings":"AAEA;AACA;AACA;AACA,MAAeA,MAAf,CAAsB;AAGpB;AACF;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,qBAAD,EAAyC;AAAA,SAN7CC,EAM6C;AAClD,SAAKA,EAAL,GAAUD,qBAAV;AACD;AACD;AACF;AACA;;;AAZsB;;AAgBtB,eAAeF,MAAf","sourcesContent":["import { SnakeController } from \"./SnakeController\";\n\n/**\n * Class representing a player\n */\nabstract class Player {\n  public sc: SnakeController;\n\n  /**\n   * Create a player\n   * @param {SnakeController} passedSnakeController snake controller for the player class.\n   */\n  constructor(passedSnakeController: SnakeController) {\n    this.sc = passedSnakeController;\n  }\n  /**\n   * Abastract make turn snake class\n   */\n  abstract makeTurn(): void;\n}\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}