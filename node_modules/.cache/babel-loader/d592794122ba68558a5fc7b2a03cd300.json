{"ast":null,"code":"import Player from \"./Player\";\nimport { Direction } from \"./Snake\";\n\n/**\n * Class representing wall behavior according to player location. Stopping the user from leaving the confines of the world.\n */\nexport class AvoidWallsPlayer extends Player {\n  /**\n   * Create AvoidWallsPlayer\n   * @param {SnakeController} passedSakeController\n   */\n  constructor(passedSakeController) {\n    super(passedSakeController);\n  }\n  /**\n   * Turn the snake to avoid the user from hitting the walls of the canvas.\n   */\n\n\n  makeTurn() {\n    const snakeDirection = this.sc.snakeDirection;\n    const snakePosition = this.sc.snakePosition;\n    const worldWidth = this.sc.worldWidth;\n    const worldHeight = this.sc.worldHeight;\n\n    if (snakeDirection === Direction.Left && snakePosition.x === 0 && snakePosition.y < worldHeight) {\n      this.sc.turnSnakeLeft();\n    } else if (snakeDirection === Direction.Right && snakePosition.x === worldWidth && snakePosition.y < worldHeight) {\n      this.sc.turnSnakeLeft();\n    } else if (snakeDirection === Direction.Up && snakePosition.y === 0 && snakePosition.x < worldWidth) {\n      this.sc.turnSnakeLeft();\n    } else if (snakeDirection === Direction.Down && snakePosition.y === worldHeight && snakePosition.x < worldHeight) {\n      this.sc.turnSnakeLeft();\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/roberttineo/Desktop/snake-game/src/AvoidWallsPlayer.ts"],"names":["Player","Direction","AvoidWallsPlayer","constructor","passedSakeController","makeTurn","snakeDirection","sc","snakePosition","worldWidth","worldHeight","Left","x","y","turnSnakeLeft","Right","Up","Down"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAAgBC,SAAhB,QAAiC,SAAjC;;AAGA;AACA;AACA;AACA,OAAO,MAAMC,gBAAN,SAA+BF,MAA/B,CAAsC;AAC3C;AACF;AACA;AACA;AACEG,EAAAA,WAAW,CAACC,oBAAD,EAAwC;AACjD,UAAMA,oBAAN;AACD;AACD;AACF;AACA;;;AACEC,EAAAA,QAAQ,GAAS;AACf,UAAMC,cAAc,GAAG,KAAKC,EAAL,CAAQD,cAA/B;AACA,UAAME,aAAa,GAAG,KAAKD,EAAL,CAAQC,aAA9B;AACA,UAAMC,UAAU,GAAG,KAAKF,EAAL,CAAQE,UAA3B;AACA,UAAMC,WAAW,GAAG,KAAKH,EAAL,CAAQG,WAA5B;;AAEA,QACEJ,cAAc,KAAKL,SAAS,CAACU,IAA7B,IACAH,aAAa,CAACI,CAAd,KAAoB,CADpB,IAEAJ,aAAa,CAACK,CAAd,GAAkBH,WAHpB,EAIE;AACA,WAAKH,EAAL,CAAQO,aAAR;AACD,KAND,MAMO,IACLR,cAAc,KAAKL,SAAS,CAACc,KAA7B,IACAP,aAAa,CAACI,CAAd,KAAoBH,UADpB,IAEAD,aAAa,CAACK,CAAd,GAAkBH,WAHb,EAIL;AACA,WAAKH,EAAL,CAAQO,aAAR;AACD,KANM,MAMA,IACLR,cAAc,KAAKL,SAAS,CAACe,EAA7B,IACAR,aAAa,CAACK,CAAd,KAAoB,CADpB,IAEAL,aAAa,CAACI,CAAd,GAAkBH,UAHb,EAIL;AACA,WAAKF,EAAL,CAAQO,aAAR;AACD,KANM,MAMA,IACLR,cAAc,KAAKL,SAAS,CAACgB,IAA7B,IACAT,aAAa,CAACK,CAAd,KAAoBH,WADpB,IAEAF,aAAa,CAACI,CAAd,GAAkBF,WAHb,EAIL;AACA,WAAKH,EAAL,CAAQO,aAAR;AACD;AACF;;AA1C0C","sourcesContent":["import Player from \"./Player\";\nimport { Snake, Direction } from \"./Snake\";\nimport { SnakeController } from \"./SnakeController\";\n\n/**\n * Class representing wall behavior according to player location. Stopping the user from leaving the confines of the world.\n */\nexport class AvoidWallsPlayer extends Player {\n  /**\n   * Create AvoidWallsPlayer\n   * @param {SnakeController} passedSakeController\n   */\n  constructor(passedSakeController: SnakeController) {\n    super(passedSakeController);\n  }\n  /**\n   * Turn the snake to avoid the user from hitting the walls of the canvas.\n   */\n  makeTurn(): void {\n    const snakeDirection = this.sc.snakeDirection;\n    const snakePosition = this.sc.snakePosition;\n    const worldWidth = this.sc.worldWidth;\n    const worldHeight = this.sc.worldHeight;\n\n    if (\n      snakeDirection === Direction.Left &&\n      snakePosition.x === 0 &&\n      snakePosition.y < worldHeight\n    ) {\n      this.sc.turnSnakeLeft();\n    } else if (\n      snakeDirection === Direction.Right &&\n      snakePosition.x === worldWidth &&\n      snakePosition.y < worldHeight\n    ) {\n      this.sc.turnSnakeLeft();\n    } else if (\n      snakeDirection === Direction.Up &&\n      snakePosition.y === 0 &&\n      snakePosition.x < worldWidth\n    ) {\n      this.sc.turnSnakeLeft();\n    } else if (\n      snakeDirection === Direction.Down &&\n      snakePosition.y === worldHeight &&\n      snakePosition.x < worldHeight\n    ) {\n      this.sc.turnSnakeLeft();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}